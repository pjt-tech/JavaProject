//구구단 배열
int[][] gugu = new int[9][9];
		
		for(int i=0; i<9; i++)
			for(int k=0; k<9; k++) 
				gugu[i][k]=(i+1)*(k+1);
	
		for(int i=0; i<9; i++) {
			for(int k=0; k<9; k++) {
				System.out.printf("%dX%d=%2d  ",k+1,i+1,gugu[i][k]);
			
			}
			System.out.printf("\n");
////문자 배열 카피

String[] oldStringArray = {"java","array","copy"};
		String[] newStringArray = new String[5];
		
		System.arraycopy(oldStringArray, 0, newStringArray, 0, oldStringArray.length);
		
		for(int i=0; i<newStringArray.length; i++)
			System.out.println(newStringArray[i]+",");

////정수 배열 카피
public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] oldIntArray = {1,2,3};
		int[] newIntArray = new int[5];
		
		
		for(int i=0; i<oldIntArray.length; i++) 
			newIntArray[i] = oldIntArray[i];
		
		for(int i=0; i<newIntArray.length; i++) 
			System.out.print(newIntArray[i]+",");
//배열을 이용하여 점수구하기
	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int select = 0, number; 
		int[] scores = new int[select];
		boolean close = true;
		int max = 0;
		while(close==true) {
		System.out.println("--------------------------------------------");
		System.out.println("1.학생수 | 2.점수입력 | 3.점수리스트 | 4.분석 | 5.종료");
		System.out.println("--------------------------------------------");
		System.out.print("선택>");
	    select = s.nextInt();
		switch(select){
		case 1 : 
			System.out.print("학생수 >");
			select = s.nextInt();
			scores = new int[select];
			break;
		case 2 :
			for(int i =0; i<scores.length; i++) {
			System.out.print("scores"+"["+i+"]"+">");
			scores[i] = s.nextInt();
			}
			break;
		case 3 :
				for(int i =0; i<scores.length; i++) 
				{ 
			System.out.println("scores"+"["+i+"]" +":"+scores[i]);
				}
				break;
		case 4 : 
			int sum = 0;
			for(int i=0; i<scores.length; i++) {
				sum += scores[i];
				for(int j=0; j<scores.length; j++) {
					if(max < scores[j]) 
						max = scores[j];			
					}
				
			}
			System.out.println("최고점수 : "+ max);
			System.out.println("평균점수 : "+sum/scores.length);
			break;
		case 5 :
			close = false;
		}
		
	   }
		System.out.println("프로그램종료");
	}
